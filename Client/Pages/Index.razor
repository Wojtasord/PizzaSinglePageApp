@page "/"

<h1>Our selection of pizzas</h1>

@foreach (var pizza in State.Menu.Pizzas)
{
    <div class="row">
        <div class="col">@pizza.Name</div>
        <div class="col">@pizza.Price</div>
        <div class="col">
            <img src="@SpicinessImage(pizza.Spiciness)" alt="@pizza.Spiciness"/>
        </div>
        <div class="col">
            <button class="btn btn-success" @onclick="@(() => AddToBasket(pizza))">Add</button>
        </div>
    </div>
}

@if (State.Basket.Orders.Any())
{
    <h1>Your current order</h1>
    
    @foreach (var (pizza, pos) in State.Basket.Orders.Select((id, pos) => (State.Menu.GetPizza(id), pos)))
    {
        <div class="row">
            <div class="col">@pizza.Name</div>
            <div class="col">@pizza.Price</div>
            <div class="col">
                <button class="btn badge-danger" @onclick="@(() => RemoveFormBasket(pos))">Remove</button>
            </div>
        </div>
    }
    <div class="row">
        <div class="col"> Total:</div>
        <div class="col"> @State.TotalPrice </div>
        <div class="col">  </div>
    </div>
}

<h1>Please enter your details below</h1>

<fieldset>
    <p>
        <label class="col-form-label" for="name">Name:</label>
        <input class="input-group-sm" id="name" @bind="State.Basket.Customer.Name"/>
    </p>
    <p>
        <label class="col-form-label" for="street">Street:</label>
        <input class="input-group-sm" id="street" @bind="State.Basket.Customer.Street"/>
    </p>
    <p>
        <label class="form-check-label" for="city">City:</label>
        <input class="input-group-sm" id="city" @bind="State.Basket.Customer.City"/>
    </p>
    <button class="btn btn-primary" @onclick="PlaceOrder">Checkout</button>
</fieldset>
<p>@State.ToJson()</p>
@code
{
    private State State { get; } = new State()
    {
        Menu = new Menu()
        {
            Pizzas = new List<Pizza>()
            {
                new Pizza(1,"Pepperoni",8.99M,Spiciness.Spicy),
                new Pizza(2,"Margarita",7.99M,Spiciness.None),
                new Pizza(3,"Diabolo",9.99M,Spiciness.Hot)
            }
        }
    };

    private string SpicinessImage(Spiciness spiciness)
    {
        return $"images/{spiciness.ToString().ToLower()}.png";
    }

    private void AddToBasket(Pizza pizza)
    {
        Console.WriteLine($"Added pizza {pizza.Name}");
        State.Basket.Add(pizza.Id);
    }

    private void RemoveFormBasket(in int pos)
    {
        Console.WriteLine($"Removing pizza at pos {pos}");
        State.Basket.RemoveAt(pos);
    }

    private void PlaceOrder()
    {
        Console.WriteLine("Placing Order");
    }
}


